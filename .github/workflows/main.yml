name: Cypress Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:
  schedule:
    - cron: '0 7,13,22 * * *'

jobs:
  cypress-run:
    runs-on: ubuntu-latest
    
    steps:
    - name: Validate required secrets
      run: |
        if [ -z "${{ secrets.SLACK_WEBHOOK_URL }}" ]; then
          echo "Error: SLACK_WEBHOOK_URL secret is not set"
          exit 1
        fi
        if [ -z "${{ secrets.CYPRESS_APP_URL }}" ]; then
          echo "Error: CYPRESS_APP_URL secret is not set"
          exit 1
        fi
        echo "‚úÖ Required secrets are configured"

    - name: Checkout
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm install

    - name: Run Cypress tests
      id: cypress
      uses: cypress-io/github-action@v5
      with:
        browser: chrome
        config-file: cypress.config.js
        publish-summary: true
        reporter: mochawesome
        reporter-options: >-
          reportDir=cypress/reports/mochawesome,
          overwrite=false,
          html=true,
          json=true,
          quiet=true,
          reportFilename=mochawesome-[datetime]
      env:
        CYPRESS_APP_URL: ${{ secrets.CYPRESS_APP_URL }}
      continue-on-error: true

    - name: Parse test results
      id: test-results
      if: always()
      run: |
        # Parse results.json created by cypress.config.js
        if [ -f "cypress/reports/results.json" ]; then
          TOTAL=$(jq -r '.totalTests' cypress/reports/results.json)
          PASSED=$(jq -r '.totalPassed' cypress/reports/results.json)
          FAILED=$(jq -r '.totalFailed' cypress/reports/results.json)
          PENDING=$(jq -r '.totalPending' cypress/reports/results.json)
          SKIPPED=$(jq -r '.totalSkipped' cypress/reports/results.json)
          
          echo "total=$TOTAL" >> "$GITHUB_OUTPUT"
          echo "passed=$PASSED" >> "$GITHUB_OUTPUT"
          echo "failed=$FAILED" >> "$GITHUB_OUTPUT"
          echo "pending=$PENDING" >> "$GITHUB_OUTPUT"
          echo "skipped=$SKIPPED" >> "$GITHUB_OUTPUT"
          
          # Determine overall status
          if [ "$FAILED" -gt 0 ]; then
            echo "status=failed" >> "$GITHUB_OUTPUT"
          else
            echo "status=passed" >> "$GITHUB_OUTPUT"
          fi
          
          echo "Test Results: $PASSED passed, $FAILED failed, $PENDING pending, $SKIPPED skipped, $TOTAL total"
        else
          echo "total=0" >> "$GITHUB_OUTPUT"
          echo "passed=0" >> "$GITHUB_OUTPUT"
          echo "failed=0" >> "$GITHUB_OUTPUT"
          echo "pending=0" >> "$GITHUB_OUTPUT"
          echo "skipped=0" >> "$GITHUB_OUTPUT"
          echo "status=unknown" >> "$GITHUB_OUTPUT"
          echo "No results.json found"
        fi

    - name: Get console errors
      id: console-errors
      if: always()
      run: |
        if [ -f "cypress/reports/consoleErrors.json" ]; then
          TOTAL_ERRORS=$(jq -r '.totalErrors' cypress/reports/consoleErrors.json)
          echo "total=$TOTAL_ERRORS" >> "$GITHUB_OUTPUT"
          echo "Found $TOTAL_ERRORS console errors"
        else
          echo "total=0" >> "$GITHUB_OUTPUT"
          echo "No consoleErrors.json found"
        fi

    - name: Get response time
      id: response-time
      if: always()
      run: |
        if [ -f "cypress/reports/responseTime.json" ]; then
          RESPONSE_TIME=$(jq -r '.responseTime' cypress/reports/responseTime.json)
          RESPONSE_TIME_SEC=$(jq -r '.responseTimeSeconds' cypress/reports/responseTime.json)
          echo "ms=$RESPONSE_TIME" >> "$GITHUB_OUTPUT"
          echo "seconds=$RESPONSE_TIME_SEC" >> "$GITHUB_OUTPUT"
          echo "Found response time: ${RESPONSE_TIME}ms (${RESPONSE_TIME_SEC}s)"
        else
          echo "ms=0" >> "$GITHUB_OUTPUT"
          echo "seconds=0" >> "$GITHUB_OUTPUT"
          echo "No responseTime.json found"
        fi

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: cypress-results-${{ github.run_id }}
        path: |
          cypress/reports/mochawesome-html/**
          cypress/reports/mochawesome/*.json
          cypress/screenshots/**/*.png
          cypress/videos/**/*.mp4
          cypress/fixtures/credits.json
          cypress/reports/consoleErrors.json
          cypress/reports/results.json
          cypress/reports/responseTime.json
        if-no-files-found: warn
        retention-days: 14

    - name: Send Slack notification
      if: always()
      uses: slackapi/slack-github-action@v1.24.0
      with:
        payload: |
          {
            "username": "GitHub Actions",
            "icon_emoji": ":github:",
            "text": "*ü§ñ Cypress Test Results*\n\n*Environment:* ${{ env.CYPRESS_APP_URL || 'Staging' }}\n*Status:* ${{ steps.test-results.outputs.status == 'passed' && '‚úÖ PASSED' || '‚ùå FAILED' }}\n\n*Test Summary*\n‚Ä¢ Total: ${{ steps.test-results.outputs.total }}\n‚Ä¢ Passed: ${{ steps.test-results.outputs.passed }} \n‚Ä¢ Failed: ${{ steps.test-results.outputs.failed }} \n‚Ä¢ Pending: ${{ steps.test-results.outputs.pending }} \n‚Ä¢ Skipped: ${{ steps.test-results.outputs.skipped }} \n\n*Console Errors*\n‚Ä¢ Total: ${{ steps.console-errors.outputs.total }}\n\n *Prompt Response*\n‚Ä¢ Time: ${{ steps.response-time.outputs.seconds }}\n\n*View Full Report:* <${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Click Here> üìä"
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
